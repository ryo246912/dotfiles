[env]
# https://evermeet.cx/ffmpeg/
# https://github.com/acj/asdf-ffmpeg
ASDF_FFMPEG_ENABLE = "gpl libx264"

[tools]
# ffmpeg                                                      = "latest"
# ruby                                                        = "3.3.1"

"aqua:Wilfred/difftastic"                                   = "0.65.0"
"aqua:ajeetdsouza/zoxide"                                   = "0.9.8"
"aqua:antonmedv/fx"                                         = "39.1.0"
"aqua:astral-sh/uv"                                         = "0.9.2"
"aqua:atuinsh/atuin"                                        = "18.8.0"
"aqua:bitwarden/clients"                                    = "2025.9.0"
"aqua:cli/cli"                                              = "2.82.1"
"aqua:dandavison/delta"                                     = "0.18.2"
"aqua:denisidoro/navi"                                      = "2.23.0"
"aqua:dlvhdr/diffnav"                                       = "0.3.1"
"aqua:dlvhdr/gh-dash"                                       = "4.18.0"
"aqua:docker/cli"                                           = "28.5.1"
"aqua:gitui-org/gitui"                                      = "0.22.1"
"aqua:hadolint/hadolint"                                    = "2.14.0"
"aqua:jesseduffield/lazydocker"                             = "0.24.1"
"aqua:jqlang/jq"                                            = "1.6"
"aqua:junegunn/fzf"                                         = "0.66.1"
"aqua:koalaman/shellcheck"                                  = "0.11.0"
"aqua:mvdan/sh"                                             = "3.12.0"
"aqua:nektos/act"                                           = "0.2.82"
"aqua:neovim/neovim"                                        = "0.11.4"
"aqua:pnpm/pnpm"                                            = "10.19.0"
"aqua:rhysd/actionlint"                                     = "1.7.8"
"aqua:samwho/spacer"                                        = "0.5.0"
"aqua:sharkdp/bat"                                          = "0.26.0"
"aqua:sinclairtarget/git-who"                               = "1.2"
"aqua:skanehira/rtty"                                       = "0.4.0"
"aqua:suzuki-shunsuke/disable-checkout-persist-credentials" = "0.1.3"
"aqua:suzuki-shunsuke/ghalint"                              = "1.5.3"
"aqua:suzuki-shunsuke/ghtkn"                                = "0.2.2"
"aqua:suzuki-shunsuke/pinact"                               = "3.4.2"
"aqua:sxyazi/yazi"                                          = "25.5.31"
"aqua:twpayne/chezmoi"                                      = "2.66.0"
"aqua:wagoodman/dive"                                       = "0.13.1"
"aqua:zizmorcore/zizmor"                                    = "1.15.2"
bun                                                         = "1.3.0"
"cargo:fzf-make"                                            = "0.65.0"
cosign                                                      = "2.6.1"
"go:github.com/air-verse/air"                               = "1.63.0"
"go:github.com/atotto/clipboard/cmd/gocopy"                 = "0.1.4"
"go:github.com/atotto/clipboard/cmd/gopaste"                = "0.1.4"
"go:github.com/go-delve/delve/cmd/dlv"                      = "1.25.2"
"go:github.com/lusingander/gotip/cmd/gotip"                 = "0.6.1"
"go:github.com/x-motemen/gore/cmd/gore"                     = "0.6.1"
"http:colordiff"                                            = { version = "1.0.21", url = "https://www.colordiff.org/colordiff-{{version}}.tar.gz", postinstall = 'cd "$(ls -1d $HOME/.local/share/mise/installs/http-colordiff/* | grep -v "latest" | sort -V | tail -n 1)" && sudo make install' }
node                                                        = "22.19.0"
"npm:@anthropic-ai/claude-code"                             = "2.0.14"
"npm:@devcontainers/cli"                                    = "0.80.1"
"npm:@github/copilot-language-server"                       = "1.381.0"
"npm:@google/gemini-cli"                                    = "0.8.2"
"npm:@playwright/mcp"                                       = "0.0.41"
"npm:@sasazame/ccresume"                                    = "1.0.0"
"npm:@taplo/cli"                                            = "0.7.0"
"npm:@typescript/native-preview"                            = "7.0.0-dev.20251014.1"
"npm:ccmanager"                                             = "2.9.2"
"npm:ccusage"                                               = "17.1.3"
"npm:concurrently"                                          = "9.2.1"
"npm:cspell"                                                = "9.2.2"
"npm:czg"                                                   = "1.12.0"
"npm:open-cli"                                              = "8.0.0"
"npm:playwright"                                            = "1.56.0"
"npm:prettier"                                              = "3.6.2"
"npm:renovate"                                              = "41.146.2"
"npm:ulid"                                                  = "3.0.1"
"pipx:grip"                                                 = "4.6.2"
python                                                      = "3.14.0"
rust                                                        = "1.90.0"
slsa-verifier                                               = "2.7.1"
terraform                                                   = "1.13.4"
tmux                                                        = "3.5"
"ubi:Ryooooooga/zabrze"                                     = "0.5.1"
"ubi:akavel/up"                                             = "0.4"
"ubi:aquaproj/aqua"                                         = "2.55.1"
"ubi:gpanders/ijq"                                          = "1.1.2"
"ubi:jonas/tig"                                             = { version = "tig-2.6.0", extract_all = true, postinstall = 'cd "$(ls -1d $HOME/.local/share/mise/installs/ubi-jonas-tig/tig-* | grep -v "latest" | sort -V | tail -n 1)" && make install' }
"ubi:ryo246912/gh-actions-dash"                             = "0.1.5"
"ubi:ryo246912/gh-reassign-reviewer"                        = "0.0.6"
"ubi:seachicken/gh-poi"                                     = "0.14.1"
"ubi:shazow/wifitui"                                        = "0.5.0"
usage                                                       = "2.5.1"
vim                                                         = "9.1.1006"

[settings]
auto_install = false
experimental = true
gpg_verify   = true
jobs         = 1
lockfile     = true

[settings.npm]
bun = true

[settings.pipx]
uvx = true

# lint
[tasks.lint-action]
depends = [
    "lint-actionlint",
    "lint-ghalint",
    "lint-zizmor",
]
description = "Run all action linters"

[tasks.lint-other]
depends = [
    "lint-json",
    "lint-toml",
    "lint-yaml",
]
description = "Run other linters"

# fix
[tasks.fix-action]
depends = [
    "fix-action-pinact",
    "fix-action-disable-checkout-persist-credentials",
]
description = "Run fix actions files"

[tasks.fix-action-pinact]
description = "Run fix actions pinact"
run         = ["pinact run"]

[tasks.fix-action-disable-checkout-persist-credentials]
description = "Run fix actions disable-checkout-persist-credentials"
run         = ["disable-checkout-persist-credentials"]

[tasks.fix-other]
depends = [
    "fix-json",
    "fix-toml",
    "fix-yaml",
]
description = "Run other formatter"

# actions
[tasks.lint-actionlint]
description = "Run actionlint"
run         = "actionlint -ignore 'SC2016:'"

[tasks.lint-zizmor]
description = "Run zizmor"
run         = "zizmor --pedantic --gh-token=$(gh auth token) --min-severity=low .github/workflows"

[tasks.lint-ghalint]
description = "Run ghalint"
run         = "ghalint run"

# toml
[tasks.lint-toml]
description = "Run lint TOML files"
run         = "taplo format --check"

[tasks.fix-toml]
description = "Run fix TOML files"
run         = "taplo format"

# yaml
[tasks.lint-yaml]
description = "Run lint YAML files"
run         = "prettier --check '**/*.{yaml,yml}'"

[tasks.fix-yaml]
description = "Run fix YAML files"
run         = "prettier --write '**/*.{yaml,yml}'"

# json
[tasks.lint-json]
description = "Run lint json files"
run         = "prettier --check '**/*.json'"

[tasks.fix-json]
description = "Run fix json files"
run         = "prettier --write '**/*.json'"
