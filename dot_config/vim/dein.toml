# hook_add	プラグインが dein.vim によって追加されたとき
# hook_source	プラグインが読み込まれる直前
# hook_post_source	プラグインが読み込まれた直後
# hook_post_update	プラグインが更新された直後

[[plugins]]
hook_post_update = './install --all'
merged           = 0
repo             = 'junegunn/fzf'

[[plugins]]
hook_add = '''
" fzfコマンドのprefixを設定
let g:fzf_command_prefix = 'Fzf'
" enterで水平分割で開く
" \ 'enter': 'vsplit',
" ctrl-{h,v}で垂直・水平分割で開く
let g:fzf_action = {
        \ 'ctrl-y': 'split',
        \ 'ctrl-h': 'split',
        \ 'ctrl-v': 'vsplit',
        \ 'ctrl-t': 'vsplit' }

" bufferを表示
nnoremap <silent> <leader>b :<C-u>:FzfBuffers<CR>
" Commandを表示
nnoremap <silent> <leader>C :<C-u>:FzfCommands<CR>
" Filesを表示
nnoremap <silent> <leader>f :<C-u>:FzfFiles<CR>
" Helpを表示
nnoremap <silent> <leader>H :<C-u>:FzfHelptags<CR>
" ファイル履歴を表示
nnoremap <silent> <leader>r :<C-u>:FzfHistory<CR>
" コマンド履歴を表示
nnoremap <silent> <leader>R :<C-u>:FzfHistory:<CR>
cnoremap <C-r> :<C-u>:FzfHistory:<CR>
" Windowを表示
nnoremap <silent> <leader>w :<C-u>:FzfWindows<CR>
'''
repo = 'junegunn/fzf.vim'

[[plugins]]
hook_add = '''
" cdの際にdirectoryのスコアを増やす
let g:zoxide_hook = 'pwd'
" zoxideを起動
cnoremap zz :Zi<CR>
'''
repo = 'nanotee/zoxide.vim'

# ファイラー
[[plugins]]
hook_add = '''
" 隠しファイルも表示する
let g:fern#default_hidden = 1
let g:fern#opener = 'split'

" <leader>eでdrawerを開くまたはフォーカスする
noremap <silent> <leader>e :<C-u>:Fern . -drawer -reveal=%<CR>
" <leader>sでdrawerを開閉する
noremap <silent> <leader>s :<C-u>:Fern . -drawer -reveal=% -toggle<CR>
"
'''
repo = 'lambdalisue/fern.vim'

# エディター関連
[[plugins]]
hook_add = '''
" auto-pairsの削除を無効
let g:AutoPairsMapBS = 0
" auto-pairsのスペースを無効
let g:AutoPairsMapSpace = 0
'''
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
hook_add = '''
colorscheme molokai

" 256色
set t_Co=256
" truecolor
set termguicolors
" 背景色
set background=dark
'''
repo = 'tomasr/molokai'

## コメントアウト
[[plugins]]
repo = 'tpope/vim-commentary'

# markdown
[[plugins]]
repo = 'ksudate/prev-md.vim'
# vim-session
[[plugins]]
hook_add = '''
" セッション用ディレクトリを作成
let s:session_dir = expand('~/.local/state/vim')
if !isdirectory(s:session_dir)
  call mkdir(s:session_dir, 'p')
endif

" セッションの保存マッピング
cabbr ss :Obsession ~/.local/state/vim/Session.vim<CR>

" セッションの読み込み&セッションの保存マッピング
cabbr sr :source ~/.local/state/vim/Session.vim \| Obsession ~/.local/state/vim/Session.vim<CR>
'''
repo = 'tpope/vim-obsession'

# git関連
[[plugins]]
hook_add = '''
" Gitステータス
nnoremap <leader>gs :Git<CR>
" Git差分
nnoremap <leader>gd :Git diff<CR>
" Git差分 (分割表示)
nnoremap <leader>gv :Gdiffsplit<CR>
" Git show (最新コミットの詳細)
nnoremap <leader>gh :Git show<CR>
" Git log -p
nnoremap <leader>gl :Git log -p --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S"<CR>
" Git log
nnoremap <leader>gL :Git log --pretty=format:"%C(auto)%h (%C(blue)%cd%C(auto))%d %s %Cblue[%cn]" --date=format:"%Y/%m/%d %H:%M:%S"<CR>
" Git branch
nnoremap <leader>gb :Git branch<CR>
" Git current branch
nnoremap <leader>gB :Git branch --show-current<CR>
" Gitui
nnoremap <leader>gu :tabnew \| terminal gitui<CR>
'''
repo = 'tpope/vim-fugitive'
