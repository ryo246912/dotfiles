#!/bin/bash

{{ if eq .chezmoi.os "darwin" -}}
install_brew() {
  if ! command -v brew &>/dev/null; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  else
    echo "Homebrew is already installed"
  fi
}

install_package() {
  local PACKAGES=(
    colordiff
    docker
    font-hackgen
    font-hackgen-nerd
    git
    gpg
    pinentry-mac
    t-rec
    yqrashawn/goku/goku

    coreutils
    findutils
    gnu-sed
    grep
  )

  for package in "${PACKAGES[@]}"; do
    if ! brew list "$package" &>/dev/null; then
      brew install "$package"
    else
      echo "$package is already installed"
    fi
  done
}

install_cask_package() {
  local CASKPACKAGES=(
    alacritty
    arc
    chatgpt
    clibor
    dbeaver-community
    docker
    google-japanese-ime
    karabiner-elements
    keyboardcleantool
    slack
    raycast
    visual-studio-code
  )

  for package in "${CASKPACKAGES[@]}"; do
    if ! brew list --cask "$package" &>/dev/null; then
      if [[ "$package" == "clibor" ]]; then
        HOMEBREW_CASK_OPTS="--language=ja" brew install --cask "$package"
      else
        brew install --cask "$package"
      fi
    else
      echo "$package is already installed"
    fi
  done
}

install_nix() {
  if ! command -v nix &>/dev/null; then
    # nix-installerでインストール
    # https://github.com/DeterminateSystems/nix-installer
    curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install
  else
    echo "Nix is already installed"
  fi
}

# 実行したいコマンドを入力
commands=(
  "install_brew"
  "install_package"
  "install_cask_package"
  "install_nix"
)

execute_command() {
  local command="$1"

  while true; do
    echo "$command"
    echo "を実行しますか? (y/n)"
    read -r answer

    case "$answer" in
      y|Y)
        eval "$command"
        break
        ;;
      n|N)
        break
        ;;
      *)
        echo "無効な入力です。y または n を入力してください。"
        ;;
    esac
  done
}

for cmd in "${commands[@]}"; do
  execute_command "$cmd"
done
{{- end }}
